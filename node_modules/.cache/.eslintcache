[{"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\index.tsx":"1","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\App.tsx":"3","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\layout\\Navbar.tsx":"4","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\employees\\addEmployee.tsx":"5","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\employees\\viewEmployee.tsx":"6","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\employees\\EditEmployee.tsx":"7","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\pages\\Home.tsx":"8","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\pages\\SignInForm.tsx":"9"},{"size":558,"mtime":1686818528605,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1685988287104,"results":"12","hashOfConfig":"11"},{"size":1462,"mtime":1686903229097,"results":"13","hashOfConfig":"11"},{"size":1761,"mtime":1686828756001,"results":"14","hashOfConfig":"11"},{"size":6543,"mtime":1686904323096,"results":"15","hashOfConfig":"11"},{"size":3532,"mtime":1686903260393,"results":"16","hashOfConfig":"11"},{"size":5710,"mtime":1686903253463,"results":"17","hashOfConfig":"11"},{"size":4227,"mtime":1686903206998,"results":"18","hashOfConfig":"11"},{"size":3814,"mtime":1686903186390,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f3y4ey",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\index.tsx",[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\reportWebVitals.ts",[],[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\App.tsx",[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\layout\\Navbar.tsx",[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\employees\\addEmployee.tsx",["49"],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\employees\\viewEmployee.tsx",["50"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Paper, Chip, TextField, Button } from \"@mui/material\";\r\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\r\n\r\ninterface User {\r\n  fullName: String;\r\n  email: String;\r\n  jobTitle: String;\r\n  afm: String;\r\n  salary: Number;\r\n  password: String;\r\n}\r\n\r\nconst ViewEmployee = () => {\r\n  const [user, setUser] = useState<User>({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    jobTitle: \"\",\r\n    afm: \"\",\r\n    salary: 0,\r\n    password: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    loadEmployee();\r\n  }, []);\r\n\r\n  const loadEmployee = async () => {\r\n    const token = sessionStorage.getItem(\"user-token\");\r\n    await axios\r\n      .get(`http://localhost:8080/employee/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((employee) => {\r\n        setUser(employee.data);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 403) navigate(\"/signin\");\r\n        alert(\"You must be logged in!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        width: \"400px\",\r\n        margin: \"0 auto\",\r\n        marginTop: \"50px\",\r\n      }}\r\n    >\r\n      <Paper elevation={3} style={{ padding: \"30px\" }}>\r\n        <Chip\r\n          label=\"Employee Details\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          icon={<AccountBoxIcon />}\r\n          size=\"medium\"\r\n          style={{ margin: \"20px 0\", fontWeight: 600, letterSpacing: \"0.75px\" }}\r\n        />\r\n\r\n        <br />\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Full Name\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.fullName}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Email\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.email}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Job Title\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.jobTitle}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"TIN\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.afm}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Salary\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.salary}\r\n          />\r\n        </p>\r\n        <Button variant=\"contained\" component={RouterLink} to=\"/\">\r\n          Back to Home\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewEmployee;\r\n","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\employees\\EditEmployee.tsx",["51","52"],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\pages\\Home.tsx",["53"],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\CRUD-Frontend\\src\\pages\\SignInForm.tsx",[],[],{"ruleId":"54","severity":1,"message":"55","line":52,"column":6,"nodeType":"56","endLine":52,"endColumn":8,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":33,"column":6,"nodeType":"56","endLine":33,"endColumn":8,"suggestions":"59"},{"ruleId":"54","severity":1,"message":"60","line":51,"column":6,"nodeType":"56","endLine":51,"endColumn":8,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":55,"column":11,"nodeType":"64","messageId":"65","endLine":55,"endColumn":19},{"ruleId":"54","severity":1,"message":"66","line":36,"column":6,"nodeType":"56","endLine":36,"endColumn":8,"suggestions":"67"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'loadEmployee'. Either include it or remove the dependency array.",["69"],"React Hook useEffect has a missing dependency: 'getEmployee'. Either include it or remove the dependency array.",["70"],"@typescript-eslint/no-unused-vars","'employee' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'loadEmployees'. Either include it or remove the dependency array.",["71"],{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [navigate]",{"range":"80","text":"81"},"Update the dependencies array to be: [loadEmployee]",{"range":"82","text":"83"},"Update the dependencies array to be: [getEmployee]",{"range":"84","text":"85"},"Update the dependencies array to be: [loadEmployees]",{"range":"86","text":"87"},[1393,1395],"[navigate]",[734,736],"[loadEmployee]",[1166,1168],"[getEmployee]",[694,696],"[loadEmployees]"]