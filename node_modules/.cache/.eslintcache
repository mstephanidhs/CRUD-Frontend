[{"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\index.tsx":"1","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\App.tsx":"3","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\layout\\Navbar.tsx":"4","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\pages\\Home.tsx":"5","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\employees\\addEmployee.tsx":"6","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\employees\\EditEmployee.tsx":"7","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\employees\\viewEmployee.tsx":"8"},{"size":554,"mtime":1685988287362,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1685988287104,"results":"11","hashOfConfig":"10"},{"size":752,"mtime":1686060100522,"results":"12","hashOfConfig":"10"},{"size":1141,"mtime":1686122909830,"results":"13","hashOfConfig":"10"},{"size":3416,"mtime":1686060494461,"results":"14","hashOfConfig":"10"},{"size":5543,"mtime":1686048894388,"results":"15","hashOfConfig":"10"},{"size":6447,"mtime":1686123312211,"results":"16","hashOfConfig":"10"},{"size":3177,"mtime":1686060555703,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"j1lv0c",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"21"},"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\App.tsx",[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\layout\\Navbar.tsx",["45"],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\pages\\Home.tsx",["46"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\ninterface User {\r\n  id: Number;\r\n  firstName: String;\r\n  lastName: String;\r\n  jobTitle: String;\r\n  afm: String;\r\n  salary: Number;\r\n  password: String;\r\n}\r\n\r\nfunction Home() {\r\n  const [users, setUsers] = useState<Array<User>>([]);\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const loadEmployees = async () => {\r\n    const employees = await axios.get(\"http://localhost:8080/employee/getAll\");\r\n    setUsers(employees.data);\r\n  };\r\n\r\n  const deleteEmployee = async (id: Number) => {\r\n    await axios.delete(`http://localhost:8080/employee/${id}`);\r\n    loadEmployees();\r\n  };\r\n\r\n  return (\r\n    <TableContainer\r\n      component={Paper}\r\n      style={{ margin: \"auto\", width: \"80%\", marginTop: \"35px\" }}\r\n      sx={{ maxHeight: \"300px\" }}\r\n    >\r\n      <Table arial-aria-label=\"simple table\" stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell>First Name</TableCell>\r\n            <TableCell>Last Name</TableCell>\r\n            <TableCell>Job Title</TableCell>\r\n            <TableCell>TIN</TableCell>\r\n            <TableCell>Salary (in â‚¬)</TableCell>\r\n            <TableCell>Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map((user, userIndex) => (\r\n            <TableRow\r\n              key={userIndex}\r\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n            >\r\n              <TableCell>{String(user.id)}</TableCell>\r\n              <TableCell>{user.firstName}</TableCell>\r\n              <TableCell>{user.lastName}</TableCell>\r\n              <TableCell>{user.jobTitle}</TableCell>\r\n              <TableCell>{user.afm}</TableCell>\r\n              <TableCell>{String(user.salary)}</TableCell>\r\n              <TableCell>\r\n                <ButtonGroup\r\n                  variant=\"contained\"\r\n                  aria-label=\"outlined primary button group\"\r\n                  size=\"small\"\r\n                >\r\n                  <Button\r\n                    component={RouterLink}\r\n                    to={`/viewEmployee/${user.id}`}\r\n                  >\r\n                    View\r\n                  </Button>\r\n                  <Button\r\n                    component={RouterLink}\r\n                    to={`/editEmployee/${user.id}`}\r\n                    sx={{\r\n                      background: \"white\",\r\n                      color: \"primary.main\",\r\n                      \":hover\": {\r\n                        bgcolor: \"primary.dark\",\r\n                        color: \"white\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ background: \"red\", \":hover\": { bgcolor: \"#d11a2a\" } }}\r\n                    onClick={() => deleteEmployee(user.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\employees\\addEmployee.tsx",[],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\employees\\EditEmployee.tsx",["47"],[],"C:\\Users\\Marios Stefanidis\\Documents\\GitHub\\Knowledge-Internship\\frontend\\src\\employees\\viewEmployee.tsx",["48"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Paper, Chip, TextField, Button } from \"@mui/material\";\r\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\r\n\r\ninterface User {\r\n  firstName: String;\r\n  lastName: String;\r\n  jobTitle: String;\r\n  afm: String;\r\n  salary: Number;\r\n  password: String;\r\n}\r\n\r\nconst ViewEmployee = () => {\r\n  const [user, setUser] = useState<User>({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    jobTitle: \"\",\r\n    afm: \"\",\r\n    salary: 0,\r\n    password: \"\",\r\n  });\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    loadEmployee();\r\n  }, []);\r\n\r\n  const loadEmployee = async () => {\r\n    const employee = await axios.get(`http://localhost:8080/employee/${id}`);\r\n    setUser(employee.data);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        width: \"400px\",\r\n        margin: \"0 auto\",\r\n        marginTop: \"50px\",\r\n      }}\r\n    >\r\n      <Paper elevation={3} style={{ padding: \"30px\" }}>\r\n        <Chip\r\n          label=\"Employee Details\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          icon={<AccountBoxIcon />}\r\n          size=\"medium\"\r\n          style={{ margin: \"20px 0\", fontWeight: 600, letterSpacing: \"0.75px\" }}\r\n        />\r\n\r\n        <br />\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"First Name\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.firstName}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Last Name\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.lastName}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Job Title\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.jobTitle}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"TIN\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.afm}\r\n          />\r\n        </p>\r\n        <p>\r\n          <TextField\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            InputProps={{ readOnly: true }}\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Salary\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            value={user.salary}\r\n          />\r\n        </p>\r\n        <Button variant=\"contained\" component={RouterLink} to=\"/\">\r\n          Back to Home\r\n        </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewEmployee;\r\n",{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":15},{"ruleId":"49","severity":1,"message":"53","line":3,"column":30,"nodeType":"51","messageId":"52","endLine":3,"endColumn":39},{"ruleId":"54","severity":1,"message":"55","line":61,"column":6,"nodeType":"56","endLine":61,"endColumn":8,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":32,"column":6,"nodeType":"56","endLine":32,"endColumn":8,"suggestions":"59"},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEmployee'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'loadEmployee'. Either include it or remove the dependency array.",["61"],{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [getEmployee]",{"range":"66","text":"67"},"Update the dependencies array to be: [loadEmployee]",{"range":"68","text":"69"},[1396,1398],"[getEmployee]",[694,696],"[loadEmployee]"]